<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xml:base='https://prod-useast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='NCAA-Bracket-Fill-2013-2019' path='/t/nssscott/workbooks' revision='1.0' site='nssscott' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cbb (cbb)' inline='true' name='federated.18bp5ky07d7uz31aec4r60gcz65k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cbb' name='excel-direct.0rrgf1o0wtdg2713rw8ny14zt86i'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/scott/Documents/NSS-Data-Analytics/Data/tableau-basketball/cbb.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0rrgf1o0wtdg2713rw8ny14zt86i' name='cbb' table='[cbb$]' type='table'>
          <columns gridOrigin='A1:Y2456:no:A1:Y2456:0' header='yes' outcome='2'>
            <column datatype='string' name='TEAM' ordinal='0' />
            <column datatype='string' name='STATE' ordinal='1' />
            <column datatype='string' name='CONF' ordinal='2' />
            <column datatype='integer' name='G' ordinal='3' />
            <column datatype='integer' name='W' ordinal='4' />
            <column datatype='real' name='ADJOE' ordinal='5' />
            <column datatype='real' name='ADJDE' ordinal='6' />
            <column datatype='real' name='BARTHAG' ordinal='7' />
            <column datatype='real' name='EFG_O' ordinal='8' />
            <column datatype='real' name='EFG_D' ordinal='9' />
            <column datatype='real' name='TOR' ordinal='10' />
            <column datatype='real' name='TORD' ordinal='11' />
            <column datatype='real' name='ORB' ordinal='12' />
            <column datatype='real' name='DRB' ordinal='13' />
            <column datatype='real' name='FTR' ordinal='14' />
            <column datatype='real' name='FTRD' ordinal='15' />
            <column datatype='real' name='2P_O' ordinal='16' />
            <column datatype='real' name='2P_D' ordinal='17' />
            <column datatype='real' name='3P_O' ordinal='18' />
            <column datatype='real' name='3P_D' ordinal='19' />
            <column datatype='real' name='ADJ_T' ordinal='20' />
            <column datatype='real' name='WAB' ordinal='21' />
            <column datatype='string' name='POSTSEASON' ordinal='22' />
            <column datatype='string' name='SEED' ordinal='23' />
            <column datatype='date' date-parse-format='yyyy' name='YEAR' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0rrgf1o0wtdg2713rw8ny14zt86i' name='cbb' table='[cbb$]' type='table'>
          <columns gridOrigin='A1:Y2456:no:A1:Y2456:0' header='yes' outcome='2'>
            <column datatype='string' name='TEAM' ordinal='0' />
            <column datatype='string' name='STATE' ordinal='1' />
            <column datatype='string' name='CONF' ordinal='2' />
            <column datatype='integer' name='G' ordinal='3' />
            <column datatype='integer' name='W' ordinal='4' />
            <column datatype='real' name='ADJOE' ordinal='5' />
            <column datatype='real' name='ADJDE' ordinal='6' />
            <column datatype='real' name='BARTHAG' ordinal='7' />
            <column datatype='real' name='EFG_O' ordinal='8' />
            <column datatype='real' name='EFG_D' ordinal='9' />
            <column datatype='real' name='TOR' ordinal='10' />
            <column datatype='real' name='TORD' ordinal='11' />
            <column datatype='real' name='ORB' ordinal='12' />
            <column datatype='real' name='DRB' ordinal='13' />
            <column datatype='real' name='FTR' ordinal='14' />
            <column datatype='real' name='FTRD' ordinal='15' />
            <column datatype='real' name='2P_O' ordinal='16' />
            <column datatype='real' name='2P_D' ordinal='17' />
            <column datatype='real' name='3P_O' ordinal='18' />
            <column datatype='real' name='3P_D' ordinal='19' />
            <column datatype='real' name='ADJ_T' ordinal='20' />
            <column datatype='real' name='WAB' ordinal='21' />
            <column datatype='string' name='POSTSEASON' ordinal='22' />
            <column datatype='string' name='SEED' ordinal='23' />
            <column datatype='date' date-parse-format='yyyy' name='YEAR' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cbb]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y2456:no:A1:Y2456:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEAM</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TEAM]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>TEAM</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONF</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CONF]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>CONF</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>G</remote-name>
            <remote-type>20</remote-type>
            <local-name>[G]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>G</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>W</remote-name>
            <remote-type>20</remote-type>
            <local-name>[W]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>W</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJOE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ADJOE]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>ADJOE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ADJDE]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>ADJDE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BARTHAG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BARTHAG]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>BARTHAG</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EFG_O</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EFG_O]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>EFG_O</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EFG_D</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EFG_D]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>EFG_D</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOR]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>TOR</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TORD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TORD]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>TORD</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ORB]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>ORB</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DRB]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>DRB</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FTR]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>FTR</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTRD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FTRD]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>FTRD</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P_O</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2P_O]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>2P_O</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P_D</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2P_D]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>2P_D</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P_O</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3P_O]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>3P_O</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P_D</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3P_D]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>3P_D</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_T</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ADJ_T]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>ADJ_T</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WAB</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WAB]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>WAB</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>POSTSEASON</remote-name>
            <remote-type>130</remote-type>
            <local-name>[POSTSEASON]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>POSTSEASON</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEED</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SEED]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>SEED</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>7</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[cbb]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>24</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='2p D' datatype='real' name='[2P_D]' role='measure' type='quantitative' />
      <column caption='2p O' datatype='real' name='[2P_O]' role='measure' type='quantitative' />
      <column caption='3p D' datatype='real' name='[3P_D]' role='measure' type='quantitative' />
      <column caption='3p O' datatype='real' name='[3P_O]' role='measure' type='quantitative' />
      <column caption='Adjde' datatype='real' name='[ADJDE]' role='measure' type='quantitative' />
      <column caption='Adjoe' datatype='real' name='[ADJOE]' role='measure' type='quantitative' />
      <column caption='Adj T' datatype='real' name='[ADJ_T]' role='measure' type='quantitative' />
      <column caption='Barthag' datatype='real' name='[BARTHAG]' role='measure' type='quantitative' />
      <column caption='Conf' datatype='string' name='[CONF]' role='dimension' type='nominal' />
      <column caption='Efg D' datatype='real' name='[EFG_D]' role='measure' type='quantitative' />
      <column caption='Efg O' datatype='real' name='[EFG_O]' role='measure' type='quantitative' />
      <column caption='Ftrd' datatype='real' name='[FTRD]' role='measure' type='quantitative' />
      <column caption='Postseason' datatype='string' name='[POSTSEASON]' role='dimension' type='nominal' />
      <column caption='Seed' datatype='string' name='[SEED]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
      <column caption='Tord' datatype='real' name='[TORD]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[YEAR]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cbb' datatype='table' name='[__tableau_internal_object_id__].[cbb_09B28EB3C45D44C6995A7A0C18F15CAA]' role='measure' type='quantitative' />
      <column-instance column='[POSTSEASON]' derivation='None' name='[none:POSTSEASON:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
      <column-instance column='[ADJDE]' derivation='Sum' name='[sum:ADJDE:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:TEAM:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arkansas Little Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boston University&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;College of Charleston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dartmouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florida Atlantic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IPFW&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NJIT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northeastern&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Penn St.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UC Santa Barbara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vanderbilt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abilene Christian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cal St. Bakersfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cal St. Northridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppin St.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fairleigh Dickinson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Georgia Southern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Illinois Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Missouri St.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sam Houston St.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Towson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UNC Asheville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita St.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alabama A&amp;M&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Connecticut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fresno St.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia Tech&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indiana St.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Miami FL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morehead St.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Carolina St.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Princeton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rider&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Southern Utah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UT Arlington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wright St.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bryant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cleveland St.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Creighton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LIU Brooklyn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Longwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norfolk St.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northwestern St.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pepperdine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Mary&apos;s&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Southeastern Louisiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UMass Lowell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Appalachian St.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chicago St.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia St.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand Canyon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IUPUI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Miami OH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northern Arizona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northern Iowa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Robert Morris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Francis PA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tennessee Martin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Texas A&amp;M&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VCU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alabama St.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Michigan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clemson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FIU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gardner Webb&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kansas St.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McNeese St.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rutgers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Alabama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TCU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UT Rio Grande Valley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BYU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canisius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eastern Kentucky&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Idaho St.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mississippi Valley St.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Citadel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UCLA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington St.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Kentucky&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Air Force&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cal St. Fullerton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cornell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Illinois St.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iowa St.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Southern Miss&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stanford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UNC Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;USC Upstate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Western Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Winthrop&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Army&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drexel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Duke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;George Mason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kennesaw St.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LSU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicholls St.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma St.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Peter&apos;s&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texas St.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UC Irvine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Weber St.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Youngstown St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arizona St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boston College&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Charleston Southern&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coastal Carolina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;George Washington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grambling St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kent St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michigan St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morgan St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Dakota St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Purdue&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sacramento St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Francis NY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Temple&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Utah St.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Utah Valley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;William &amp; Mary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boise St.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DePaul&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harvard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Louisiana Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Louisiana Monroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Alabama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Notre Dame&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Diego St.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UMKC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Virginia Tech&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Xavier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arkansas Pine Bluff&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Furman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Louisiana Tech&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mount St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Texas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ohio St.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portland St.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seton Hall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Texas A&amp;M Corpus Chris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UAB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VMI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cal Baptist&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Duquesne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Tennessee St.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Houston Baptist&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Old Dominion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Jose St.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Dakota St.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UCF&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UTSA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ball St.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cal Poly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eastern Michigan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eastern Washington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Loyola MD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marist&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Mexico St.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oregon St.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quinnipiac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Savannah St.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Bonaventure&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UMBC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Michigan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austin Peay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colorado St.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delaware St.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson St.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nebraska Omaha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Colorado&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Kentucky&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Joseph&apos;s&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee St.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Texas Southern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alcorn St.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colgate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florida A&amp;M&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Beach St.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Middle Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Navy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Florida&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Radford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sacred Heart&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Carolina St.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UC Riverside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bethune Cookman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eastern Illinois&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Florida Gulf Coast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gonzaga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Incarnate Word&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jacksonville St.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montana St.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Carolina A&amp;T&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Siena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stephen F. Austin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tulane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UNC Wilmington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Illinois&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arkansas St.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bucknell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drake&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hofstra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Holy Cross&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Loyola Chicago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Loyola Marymount&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murray St.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Presbyterian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SMU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Southern Illinois&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UC Davis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UTEP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wagner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baylor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fordham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lipscomb&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mississippi St.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northwestern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southeast Missouri St.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tennessee Tech&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas Tech&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Villanova&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Florida St.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Madison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maryland Eastern Shore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Carolina Central&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oral Roberts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prairie View A&amp;M&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SIU Edwardsville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stetson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stony Brook&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UNLV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wofford&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SMU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Temple&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UCF&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington, D.C.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lousiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tulane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Florida&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[sum:ADJDE:ok]' palette=':filled' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>91.0</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>85.200000000000003</bucket>
            </map>
            <map to=':filled/diamond'>
              <bucket>94.299999999999997</bucket>
            </map>
            <map to=':filled/plus'>
              <bucket>89.799999999999997</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>89.200000000000003</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>89.900000000000006</bucket>
            </map>
            <map to=':filled/triangle'>
              <bucket>95.200000000000003</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:POSTSEASON:nk]' palette='gray_warm_10_0' type='palette'>
            <map to='#55aa7f'>
              <bucket>&quot;F4&quot;</bucket>
            </map>
            <map to='#55aaff'>
              <bucket>&quot;2ND&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#c5c5c5'>
              <bucket>&quot;E8&quot;</bucket>
            </map>
            <map to='#c5c5c5'>
              <bucket>&quot;S16&quot;</bucket>
            </map>
            <map to='#cb0000'>
              <bucket>&quot;Champions&quot;</bucket>
            </map>
            <map to='#dcd4d0'>
              <bucket>&quot;R68&quot;</bucket>
            </map>
            <map to='#dedede'>
              <bucket>&quot;R32&quot;</bucket>
            </map>
            <map to='#dedede'>
              <bucket>&quot;R64&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cbb' id='cbb_09B28EB3C45D44C6995A7A0C18F15CAA'>
            <properties context=''>
              <relation connection='excel-direct.0rrgf1o0wtdg2713rw8ny14zt86i' name='cbb' table='[cbb$]' type='table'>
                <columns gridOrigin='A1:Y2456:no:A1:Y2456:0' header='yes' outcome='2'>
                  <column datatype='string' name='TEAM' ordinal='0' />
                  <column datatype='string' name='STATE' ordinal='1' />
                  <column datatype='string' name='CONF' ordinal='2' />
                  <column datatype='integer' name='G' ordinal='3' />
                  <column datatype='integer' name='W' ordinal='4' />
                  <column datatype='real' name='ADJOE' ordinal='5' />
                  <column datatype='real' name='ADJDE' ordinal='6' />
                  <column datatype='real' name='BARTHAG' ordinal='7' />
                  <column datatype='real' name='EFG_O' ordinal='8' />
                  <column datatype='real' name='EFG_D' ordinal='9' />
                  <column datatype='real' name='TOR' ordinal='10' />
                  <column datatype='real' name='TORD' ordinal='11' />
                  <column datatype='real' name='ORB' ordinal='12' />
                  <column datatype='real' name='DRB' ordinal='13' />
                  <column datatype='real' name='FTR' ordinal='14' />
                  <column datatype='real' name='FTRD' ordinal='15' />
                  <column datatype='real' name='2P_O' ordinal='16' />
                  <column datatype='real' name='2P_D' ordinal='17' />
                  <column datatype='real' name='3P_O' ordinal='18' />
                  <column datatype='real' name='3P_D' ordinal='19' />
                  <column datatype='real' name='ADJ_T' ordinal='20' />
                  <column datatype='real' name='WAB' ordinal='21' />
                  <column datatype='string' name='POSTSEASON' ordinal='22' />
                  <column datatype='string' name='SEED' ordinal='23' />
                  <column datatype='date' date-parse-format='yyyy' name='YEAR' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Barthag'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Chance of Winning Aginst Avg. Team (Barthag) vs. Furthest Round Achieved</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cbb (cbb)' name='federated.18bp5ky07d7uz31aec4r60gcz65k' />
          </datasources>
          <datasource-dependencies datasource='federated.18bp5ky07d7uz31aec4r60gcz65k'>
            <column caption='Barthag' datatype='real' name='[BARTHAG]' role='measure' type='quantitative' />
            <column caption='Postseason' datatype='string' name='[POSTSEASON]' role='dimension' type='nominal' />
            <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
            <column caption='Year' datatype='date' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[POSTSEASON]' derivation='None' name='[none:POSTSEASON:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[BARTHAG]' derivation='Sum' name='[sum:BARTHAG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEAR]' derivation='Year' name='[yr:YEAR:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;2ND&quot;' function='range' level='[none:POSTSEASON:nk]' to='&quot;F4&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;S16&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]'>
            <groupfilter function='member' level='[yr:YEAR:ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:BARTHAG:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</column>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#d4d4d4' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='rows' value='#c0c0c0' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='rows' value='#d4d4d4' />
            <format attr='background-color' scope='cols' value='#d4d4d4' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='rows' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ec7600' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' value='Postseason'>
              <formatted-text>
                <run bold='true' fontcolor='#f5f5f5'>Postseason</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' value='Year of Year'>
              <formatted-text>
                <run bold='true' fontcolor='#f5f5f5'>Year of Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' />
              <color column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:BARTHAG:qk]</rows>
        <cols>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]</cols>
      </table>
      <simple-id uuid='{A52C26E9-5E98-4F38-BFE3-9BA0D9E10447}' />
    </worksheet>
    <worksheet name='Conference'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Arial Black'>Conference vs Furthest Round Achieved</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cbb (cbb)' name='federated.18bp5ky07d7uz31aec4r60gcz65k' />
          </datasources>
          <datasource-dependencies datasource='federated.18bp5ky07d7uz31aec4r60gcz65k'>
            <column caption='Conf' datatype='string' name='[CONF]' role='dimension' type='nominal' />
            <column caption='Postseason' datatype='string' name='[POSTSEASON]' role='dimension' type='nominal' />
            <column-instance column='[POSTSEASON]' derivation='Count' name='[cnt:POSTSEASON:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CONF]' derivation='None' name='[none:CONF:nk]' pivot='key' type='nominal' />
            <column-instance column='[POSTSEASON]' derivation='None' name='[none:POSTSEASON:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;2ND&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;Champions&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;F4&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='492' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#ad4523</color>
                <color>#bc4d23</color>
                <color>#cb5522</color>
                <color>#d95e21</color>
                <color>#e76820</color>
                <color>#ee7725</color>
                <color>#f58a30</color>
                <color>#fa9e3f</color>
                <color>#fdb053</color>
                <color>#ffc171</color>
                <color>#d9d5c9</color>
                <color>#d4c1c1</color>
                <color>#d0aaaa</color>
                <color>#cc9494</color>
                <color>#c77f7f</color>
                <color>#c36a6a</color>
                <color>#bf5656</color>
                <color>#bb4444</color>
                <color>#b63131</color>
                <color>#b22020</color>
                <color>#ae0f0f</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' />
              <text column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:CONF:nk]' />
              <color column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' />
              <text column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='7'><![CDATA[<[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:CONF:nk]> Conference]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='7'><![CDATA[<[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]> Times]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7BEF7D15-0D8E-4555-A8CF-513DA23ACC73}' />
    </worksheet>
    <worksheet name='Seeding'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Arial Black' fontsize='11'>Seeding Vs. Furthest Round Achieved</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cbb (cbb)' name='federated.18bp5ky07d7uz31aec4r60gcz65k' />
          </datasources>
          <datasource-dependencies datasource='federated.18bp5ky07d7uz31aec4r60gcz65k'>
            <column caption='Postseason' datatype='string' name='[POSTSEASON]' role='dimension' type='nominal' />
            <column caption='Seed' datatype='string' name='[SEED]' role='dimension' type='nominal' />
            <column-instance column='[POSTSEASON]' derivation='Count' name='[cnt:POSTSEASON:qk]' pivot='key' type='quantitative' />
            <column-instance column='[POSTSEASON]' derivation='None' name='[none:POSTSEASON:nk]' pivot='key' type='nominal' />
            <column-instance column='[SEED]' derivation='None' name='[none:SEED:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;2ND&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;Champions&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;F4&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='301' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#aa5500</color>
                <color>#af6113</color>
                <color>#b46e28</color>
                <color>#b97b3d</color>
                <color>#be8954</color>
                <color>#c4986c</color>
                <color>#c9a786</color>
                <color>#ceb7a0</color>
                <color>#d3c8bc</color>
                <color>#d9d9d9</color>
                <color>#d3bcbc</color>
                <color>#cea0a0</color>
                <color>#c98686</color>
                <color>#c46c6c</color>
                <color>#be5454</color>
                <color>#b93d3d</color>
                <color>#b42828</color>
                <color>#af1313</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' />
              <color column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' />
              <text column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:SEED:nk]' />
              <text column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='8'><![CDATA[<[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:SEED:nk]> Seed]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='8'><![CDATA[<[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]> Times]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EA2B15C5-CB27-41EC-9F54-31C25A3BD017}' />
    </worksheet>
    <worksheet name='State by Postseason'>
      <table>
        <view>
          <datasources>
            <datasource caption='cbb (cbb)' name='federated.18bp5ky07d7uz31aec4r60gcz65k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18bp5ky07d7uz31aec4r60gcz65k'>
            <column caption='Postseason' datatype='string' name='[POSTSEASON]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year' datatype='date' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[POSTSEASON]' derivation='Count' name='[cnt:POSTSEASON:qk]' pivot='key' type='quantitative' />
            <column-instance column='[POSTSEASON]' derivation='None' name='[none:POSTSEASON:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='Year' name='[yr:YEAR:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]'>
            <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;Champions&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]'>
            <groupfilter function='level-members' level='[yr:YEAR:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</column>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[Longitude (generated)]' field-type='quantitative' max='-7109698.1496530781' min='-14588788.23822251' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[Latitude (generated)]' field-type='quantitative' max='6744270.8050010977' min='1628635.4806888674' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' />
              <lod column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:STATE:nk]' />
              <text column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' />
              <geometry column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='8'>&lt;</run>
                <run fontsize='8'>[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]</run>
                <run fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18bp5ky07d7uz31aec4r60gcz65k].[Latitude (generated)]</rows>
        <cols>[federated.18bp5ky07d7uz31aec4r60gcz65k].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9721CB7E-FA95-48F4-ACF5-BCC18AFD52C9}' />
    </worksheet>
    <worksheet name='WAB'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='11'>Wins Above Bubble (WAB) vs. Furthest Round Achieved</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cbb (cbb)' name='federated.18bp5ky07d7uz31aec4r60gcz65k' />
          </datasources>
          <datasource-dependencies datasource='federated.18bp5ky07d7uz31aec4r60gcz65k'>
            <column caption='Postseason' datatype='string' name='[POSTSEASON]' role='dimension' type='nominal' />
            <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
            <column datatype='real' name='[WAB]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[POSTSEASON]' derivation='None' name='[none:POSTSEASON:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[WAB]' derivation='Sum' name='[sum:WAB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEAR]' derivation='Year' name='[yr:YEAR:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;2ND&quot;' function='range' level='[none:POSTSEASON:nk]' to='&quot;F4&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;S16&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Champions&quot;</bucket>
              <bucket>&quot;2ND&quot;</bucket>
              <bucket>&quot;F4&quot;</bucket>
              <bucket>&quot;E8&quot;</bucket>
              <bucket>&quot;S16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:YEAR:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</column>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:WAB:qk]' field-type='quantitative' max='19.5' max-size='1' min='5.0' min-size='0' type='rangesize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:WAB:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.0227916240692139' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:WAB:qk]</rows>
        <cols>([federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk] / [federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk])</cols>
      </table>
      <simple-id uuid='{D8F4B285-C70C-49C7-808C-7372E1B94970}' />
    </worksheet>
    <worksheet name='Wins'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='11'>Wins vs. Furthest Round Achieved</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cbb (cbb)' name='federated.18bp5ky07d7uz31aec4r60gcz65k' />
          </datasources>
          <datasource-dependencies datasource='federated.18bp5ky07d7uz31aec4r60gcz65k'>
            <column caption='Postseason' datatype='string' name='[POSTSEASON]' role='dimension' type='nominal' />
            <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
            <column datatype='integer' name='[W]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[POSTSEASON]' derivation='None' name='[none:POSTSEASON:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[W]' derivation='Sum' name='[sum:W:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEAR]' derivation='Year' name='[yr:YEAR:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;2ND&quot;' function='range' level='[none:POSTSEASON:nk]' to='&quot;F4&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;S16&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Champions&quot;</bucket>
              <bucket>&quot;2ND&quot;</bucket>
              <bucket>&quot;F4&quot;</bucket>
              <bucket>&quot;E8&quot;</bucket>
              <bucket>&quot;S16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:YEAR:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</column>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' value='#ffaa00' />
            <format attr='background-color' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]' value='#0055ff' />
            <format attr='background-color' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:W:qk]' value='#aa0000' />
            <format attr='band-color' scope='cols' value='#e6e6e6' />
            <format attr='band-color' scope='rows' value='#f5f5f5' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='rows' value='#5555ff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]' value='#f5f5f5' />
            <format attr='color' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:W:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:W:qk]' field-type='quantitative' max='38' max-size='1' min='33' min-size='0.585507' type='rangesize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#f5f5f5' />
            <format attr='band-color' scope='rows' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' value='Year of Year'>
              <formatted-text>
                <run fontcolor='#f5f5f5'>Year of Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:W:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.9168550968170166' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:W:qk]</rows>
        <cols>([federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk] / [federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk])</cols>
      </table>
      <simple-id uuid='{B6D57BE2-9D77-4317-957C-E779BC8ACF4F}' />
    </worksheet>
    <worksheet name='Wins vs. Round'>
      <table>
        <view>
          <datasources>
            <datasource caption='cbb (cbb)' name='federated.18bp5ky07d7uz31aec4r60gcz65k' />
          </datasources>
          <datasource-dependencies datasource='federated.18bp5ky07d7uz31aec4r60gcz65k'>
            <column caption='Postseason' datatype='string' name='[POSTSEASON]' role='dimension' type='nominal' />
            <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
            <column datatype='integer' name='[W]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[POSTSEASON]' derivation='None' name='[none:POSTSEASON:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[W]' derivation='Sum' name='[sum:W:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEAR]' derivation='Year' name='[yr:YEAR:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;2ND&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;Champions&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;F4&quot;' />
              <groupfilter function='member' level='[none:POSTSEASON:nk]' member='&quot;S16&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]'>
            <groupfilter function='member' level='[yr:YEAR:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:W:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</column>
            <column>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' />
              <lod column='[federated.18bp5ky07d7uz31aec4r60gcz65k].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]</rows>
        <cols>[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:W:qk]</cols>
      </table>
      <simple-id uuid='{96E50A8F-5403-462F-A1CB-CAD16FF216FA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontname='Courier New' fontsize='22'>HOW TO DO A MARCH MADNESS BRACKET ...</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#666666' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='cbb (cbb)' name='federated.18bp5ky07d7uz31aec4r60gcz65k' />
      </datasources>
      <datasource-dependencies datasource='federated.18bp5ky07d7uz31aec4r60gcz65k'>
        <column caption='Postseason' datatype='string' name='[POSTSEASON]' role='dimension' type='nominal' />
        <column caption='Year' datatype='date' name='[YEAR]' role='dimension' type='quantitative' />
        <column-instance column='[POSTSEASON]' derivation='None' name='[none:POSTSEASON:nk]' pivot='key' type='nominal' />
        <column-instance column='[YEAR]' derivation='Year' name='[yr:YEAR:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='93000' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='6000'>
            <zone h='93000' id='15' type-v2='layout-basic' w='98400' x='800' y='6000' />
          </zone>
          <zone h='5000' id='18' type-v2='title' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='14250' id='5' name='Wins' show-title='false' w='48100' x='300' y='53375' />
        <zone h='5875' id='6' mode='checkdropdown' name='Wins' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' type-v2='filter' w='16000' x='300' y='50125' />
        <zone h='7000' id='7' mode='checkdropdown' name='Wins' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type-v2='filter' w='14800' x='60000' y='62500' />
        <zone h='48625' id='11' name='Seeding' show-title='false' w='49900' x='49100' y='61375' />
        <zone h='32250' id='12' mode='checkdropdown' name='Seeding' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type-v2='filter' w='16300' x='59000' y='62375' />
        <zone h='33250' id='19' name='Conference' show-title='false' w='50800' x='49300' y='23750' />
        <zone forceUpdate='true' h='5250' id='21' type-v2='text' w='49800' x='49000' y='56375'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Bold'>Conference (above) / Seeding (below) vs. Furthest Round Achieved</run>
          </formatted-text>
        </zone>
        <zone h='41250' id='22' name='State by Postseason' show-title='false' w='48200' x='100' y='8875' />
        <zone h='3875' id='23' mode='checkdropdown' name='State by Postseason' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' type-v2='filter' w='15300' x='900' y='41250' />
        <zone h='32250' id='24' mode='checkdropdown' name='State by Postseason' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type-v2='filter' w='16000' x='32200' y='37875' />
        <zone h='29125' id='25' name='Barthag' show-title='false' w='47900' x='400' y='70000' />
        <zone h='26500' id='26' mode='checkdropdown' name='Barthag' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' type-v2='filter' w='16000' x='32900' y='70375' />
        <zone h='32250' id='27' mode='checkdropdown' name='Barthag' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type-v2='filter' w='16000' x='17200' y='70375' />
        <zone h='19250' id='29' is-centered='0' is-scaled='1' param='C:/Users/scott/OneDrive/Desktop/DICE.JPG' type-v2='bitmap' w='15800' x='82800' y='7375' />
        <zone forceUpdate='true' h='15625' id='28' is-scaled='1' param='C:/Users/scott/OneDrive/Desktop/BBALL-MADNESS.JPG' type-v2='bitmap' w='66900' x='31900' y='7250' />
      </zones>
      <simple-id uuid='{1F760654-CCA5-4A1A-848D-78E522ED355F}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='State by Postseason'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' type='filter' />
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:STATE:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:YEAR:qk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD7FE05A-716F-436C-9593-CC11C92FFF6C}' />
    </window>
    <window class='worksheet' name='Barthag'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' type='filter' />
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[tyr:YEAR:qk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD8C5E24-7DAB-4B64-AD1A-686131BFB07E}' />
    </window>
    <window class='worksheet' name='Wins vs. Round'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' type='filter' />
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[:Measure Names]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF59698C-87AA-4268-9DA2-2B6193D2DC58}' />
    </window>
    <window class='worksheet' name='Conference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:CONF:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:STATE:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BB6F5E6-6599-4772-BAEF-1F4148DC8C48}' />
    </window>
    <window class='worksheet' name='Seeding'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[cnt:POSTSEASON:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:SEED:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4CB3B2A-45E8-486B-8CD0-E51E9440C683}' />
    </window>
    <window class='worksheet' name='WAB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='300'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' type='filter' />
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:WAB:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[max:DRB:ok]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:3P_O:ok]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:ADJDE:ok]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[tyr:YEAR:ok]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[tyr:YEAR:qk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFA4D633-6DEF-413B-8A9E-F59F98B25D5D}' />
    </window>
    <window class='worksheet' name='Wins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='300'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]' type='filter' />
            <card param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:W:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[max:DRB:ok]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:TEAM:nk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:3P_O:ok]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:ADJDE:ok]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[tyr:YEAR:ok]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[tyr:YEAR:qk]</field>
            <field>[federated.18bp5ky07d7uz31aec4r60gcz65k].[yr:YEAR:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5109FE77-2D8B-40DA-979F-C2E80E558B87}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Barthag'>
          <zoom type='entire-view' />
          <highlight field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[none:POSTSEASON:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Conference' />
        <viewpoint name='Seeding' />
        <viewpoint name='State by Postseason'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Wins'>
          <zoom type='entire-view' />
          <highlight field='[federated.18bp5ky07d7uz31aec4r60gcz65k].[sum:W:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E7D83122-52F8-4400-8105-69EE01E1C5B2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Barthag' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Conference' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      6vX2dT6QAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Seeding' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAHMElEQVR4nO3cWWxcZwGG4W88Hi/jbRwv4yWNncXZE0cN0KRUREmjtJUIXWgobSQCEQIK
      oop6QQutUrVSqMIl0IXABbQXiBYoMhIII1HSKiQtBCKnblKnTR23toOdeOrx0njOLNyQCCJo
      yNjYiO997ubozNF/RueV/jnnnwnlcrmcAFMFcz0AYC4RAKwRAKwRAKwRAKwRAKwRAKwVXmmH
      wzt2aKynZzbGAsy6KwYw1tOj0a6u2RgLMOuYAsEaAcAaAcAaAcAaAcBafgEUlyu68lpVr1ty
      2QHCKlnarrrNW1S7YZ2KK0uu8sBFqtm1X213tuQ1LOBq5RXAvLu+qtb7H1L7Y5/XP17i4WWb
      tfzBe1XZ1qLYtjtVf/3iqzxySAXl1YpEr3h3FpgReV1pI888rpETn1HN15b/0/biZe0qTfep
      54XnNDk8IUkKX/MRLX/sfpUVhpQ5/6pO7Hta0e0PaOFNSxUuLtDZ7z6i3lentOqp76gilFBB
      02olfzjt8wL+IzP6HeD9g89rcLBZa5/8gVY9uFtl8Zhi23aquP8X6t67V+MVG9SwfqPm33qt
      Bp5+XN3fP6L4zu2Kbf2sKgef19HdX9CbPz+qbHYmRwX8ezM618iN9qn3ka+ot6RWrY9+T6v3
      ZNQ3FFfFh7aqNbdK6v2DRgYKFF+4WA2336PYaErnDx5SpOkOpQd+p+BCWrlMZiaHBHygPAIo
      VdmaFSpZ06ZITbOqN25UtvuwLiQLVbH1btW2pjX2xoAiRSlNnu7X6PHfanLdKo281KlcdZPS
      Qa+GXn5dxW91aejYeUXiGY29dkhFD9+l5tejKlu3UKFDM3+iwL8SutKP4jvb2y9bCxRTzW23
      qKq+4tKWc788oOSgVFDbqrpNH1W0Jqpg8JSGXjyk1ERYlZu2qWZpXMHgKQ0fPKx0tFXxG69X
      cUlao0d+r0T3sKpuuVWxurAmh5MK3npJiZ7kf+ucgUvyCAD4/8GDMFgjAFgjAFjL6zZoqLJZ
      ddtvV2VZn84c6FAgqSDWovpP3qHydLfe/lGnMpJUWKK6nXvU1F5/6b1Tx3+t/p645tWf0JkX
      js7MWQB5yiuA6ptvU0nrEjWvb9bAgQ4FqlDNJz6uaMsSNbaUqu9iAOkLOv/TJzXZtU7rv7VH
      R3d/WVMjowrHVyv53jtSbL5q1y5QNhdVUeGExs+lVLagQanTx5Q40a9IyxpVr7xG2XOnlTj2
      hrLRJtVet1bhgkBjx45o4uz4zH4asJPXFGjkuSfU1/lnZTMXbyCNafiZJ9T/creylz3Hyk4k
      lRpNKhsESiVGlJ6YUtmGT2n+1lap7Ua1739A1a21it/3TbV9erMKl9yg5XvvVVmsVW2Pfl2x
      RQ1q+OI31Lxhheo+95AWbFmkSHyJYh9eyfwN0zbn11Dq3dc0+OxPNNz9tsY6f6P+n72oTFWj
      ijbdrKZFYYWyxcplKxXfvFbpsaQKGxarqHhcyT91ixUTmK7/3WWXQUqZYFLjJ7t04fhJZRNv
      ajzxik52Nap86y4tvy+kYw8/q4CVE5iGPAKoU+OXdqnmuo+pfHWNlu3bpzM/fkrRTfeo9oYt
      qlhZrBX7pN5v79foX6dxdf7lV3r31E1quHuHpkYCJV/pUFHjZtUvqpBiMU3+8R1l+WN3TFMe
      T4ILFamtUbgofGlLMDKsgop5CkcubssqGDqrTPrvL8MRFcXKlRpJSDkpVFqpcMH7SqciKiov
      VJBIKlQRU2hqXJl0WJHqUqUT7ylUWqVIZZlCuUBBIqFcOKpIVblCubSC8+eUCZgEYXpYCgFr
      c/4lGJhLBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABroVwul/ugHQY6OpRK
      JGZrPMCs+hvTGsH4VaQ9WgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State by Postseason' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='WAB' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wins' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Wins vs. Round' width='192'>
      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
      tjWGAQy2Nf8/AClKf7GfZYMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
